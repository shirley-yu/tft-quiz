{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shirley\\\\Documents\\\\tft-quiz\\\\tft-quiz\\\\src\\\\components\\\\timer.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\n\nclass Timer extends Component {\n  render() {\n    const _this$props = this.props,\n          timerFlag = _this$props.timerFlag,\n          onToggle = _this$props.onToggle,\n          seconds = _this$props.seconds,\n          onCloseTimer = _this$props.onCloseTimer,\n          score = _this$props.score,\n          showScore = _this$props.showScore,\n          onFlagSubmit = _this$props.onFlagSubmit,\n          submitFlag = _this$props.submitFlag,\n          onInputName = _this$props.onInputName,\n          onSubmitToDB = _this$props.onSubmitToDB;\n\n    const emotes = require(\"./emotes.json\");\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Speed Timer Mode\", \" \", timerFlag ? React.createElement(\"span\", {\n      className: \"badge badge-pill badge-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, seconds, \" \", \"seconds left\") : \"\", \" \"), React.createElement(Modal, {\n      show: showScore,\n      onHide: function () {\n        return;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, submitFlag ? React.createElement(React.Fragment, null, React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: onCloseTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Submit Score\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      onChange: onInputName,\n      placeholder: \"Enter player name here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Score\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      plaintext: true,\n      readOnly: true,\n      name: \"currentScore\",\n      defaultValue: score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: onSubmitToDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: onCloseTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Cancel\"))) : React.createElement(React.Fragment, null, React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: onCloseTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Speed mode is finished!\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"You got \", score, \" combinations in 30 seconds!\", React.createElement(\"img\", {\n      src: emotes.emotes[0].images[11].img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: onFlagSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Submit Score\"), React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: onCloseTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Return\")))));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["C:\\Users\\Shirley\\Documents\\tft-quiz\\tft-quiz\\src\\components\\timer.jsx"],"names":["React","Component","Modal","Button","Form","Row","Col","Timer","render","props","timerFlag","onToggle","seconds","onCloseTimer","score","showScore","onFlagSubmit","submitFlag","onInputName","onSubmitToDB","emotes","require","images","img"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nclass Timer extends Component {\r\n  render() {\r\n    const {\r\n      timerFlag,\r\n      onToggle,\r\n      seconds,\r\n      onCloseTimer,\r\n      score,\r\n      showScore,\r\n      onFlagSubmit,\r\n      submitFlag,\r\n      onInputName,\r\n      onSubmitToDB\r\n    } = this.props;\r\n\r\n    const emotes = require(\"./emotes.json\");\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"btn btn-warning\" onClick={onToggle}>\r\n          Speed Timer Mode{\" \"}\r\n          {timerFlag ? (\r\n            <span className=\"badge badge-pill badge-dark\">\r\n              {seconds} {\"seconds left\"}\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}{\" \"}\r\n        </button>\r\n        <Modal\r\n          show={showScore}\r\n          onHide={function() {\r\n            return;\r\n          }}\r\n        >\r\n          {submitFlag ? (\r\n            <>\r\n              <Modal.Header closeButton onClick={onCloseTimer}>\r\n                <Modal.Title>Submit Score</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                  <Form.Group as={Row}>\r\n                    <Form.Label column sm=\"2\">\r\n                      Name\r\n                    </Form.Label>\r\n                    <Col sm=\"10\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        onChange={onInputName}\r\n                        placeholder=\"Enter player name here\"\r\n                      />\r\n                    </Col>\r\n                  </Form.Group>\r\n                  <Form.Group as={Row}>\r\n                    <Form.Label column sm=\"2\">\r\n                      Score\r\n                    </Form.Label>\r\n                    <Col sm=\"10\">\r\n                      <Form.Control\r\n                        plaintext\r\n                        readOnly\r\n                        name=\"currentScore\"\r\n                        defaultValue={score}\r\n                      />\r\n                    </Col>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={onSubmitToDB}>\r\n                  Submit\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={onCloseTimer}>\r\n                  Cancel\r\n                </Button>\r\n              </Modal.Footer>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Modal.Header closeButton onClick={onCloseTimer}>\r\n                <Modal.Title>Speed mode is finished!</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <p>\r\n                  You got {score} combinations in 30 seconds!\r\n                  <img src={emotes.emotes[0].images[11].img} />\r\n                </p>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={onFlagSubmit}>\r\n                  Submit Score\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={onCloseTimer}>\r\n                  Return\r\n                </Button>\r\n              </Modal.Footer>\r\n            </>\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}