{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shirley\\\\Documents\\\\tft-quiz\\\\tft-quiz\\\\src\\\\components\\\\popup.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nclass Popup extends Component {\n  render() {\n    const _this$props = this.props,\n          show = _this$props.show,\n          onShow = _this$props.onShow,\n          onClose = _this$props.onClose,\n          combo = _this$props.combo,\n          correct = _this$props.correct,\n          selected = _this$props.selected,\n          index = _this$props.index;\n\n    const emotes = require(\"./emotes.json\");\n\n    const items = require(\"./items.json\");\n\n    const correctMsg = \"Correct! +1\";\n    const incorrectMsg = \"Incorrect.. -1\";\n    const incorrectMsg2 = \"You made \";\n    var selected1 = selected.filter(item => item.selected[0] === true);\n    var selected2 = selected.filter(item => item.selected[1] === true);\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: show,\n      onHide: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.correct ? correctMsg : incorrectMsg, React.createElement(\"img\", {\n      src: this.props.correct ? emotes.emotes[0].images[index[0]].img : emotes.emotes[1].images[index[1]].img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, !correct && selected1.length > 0 && selected2.length > 0 ? React.createElement(React.Fragment, null, incorrectMsg2 + items.items[selected1[0].index].combinations[selected2[0].index].combo, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: items.items[selected1[0].index].combinations[selected2[0].index].comboImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })) : \"\"), React.createElement(\"div\", {\n      className: \" text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"font-weight-bold text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, items.items[combo.main].combinations[combo.combo].combo)), \" \", React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"combines from\", \" \", React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, items.items[combo.main].name), \" \", \"and\", \" \", React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, items.items[combo.combo].name), \".\"), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: items.items[combo.main].img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" \", React.createElement(\"img\", {\n      src: items.items[combo.combo].img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"font-weight-light text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Stats: \"), items.items[combo.main].combinations[combo.combo].stat)), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"btn btn-primary btn-lg\",\n      variant: \"secondary\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"OK\"))));\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["C:\\Users\\Shirley\\Documents\\tft-quiz\\tft-quiz\\src\\components\\popup.jsx"],"names":["React","Component","Button","Modal","Popup","render","props","show","onShow","onClose","combo","correct","selected","index","emotes","require","items","correctMsg","incorrectMsg","incorrectMsg2","selected1","filter","item","selected2","images","img","length","combinations","comboImg","main","name","stat"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nclass Popup extends Component {\r\n  render() {\r\n    const {\r\n      show,\r\n      onShow,\r\n      onClose,\r\n      combo,\r\n      correct,\r\n      selected,\r\n      index\r\n    } = this.props;\r\n\r\n    const emotes = require(\"./emotes.json\");\r\n    const items = require(\"./items.json\");\r\n    const correctMsg = \"Correct! +1\";\r\n    const incorrectMsg = \"Incorrect.. -1\";\r\n    const incorrectMsg2 = \"You made \";\r\n\r\n    var selected1 = selected.filter(item => item.selected[0] === true);\r\n    var selected2 = selected.filter(item => item.selected[1] === true);\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={show}\r\n          onHide={onClose}\r\n        >\r\n          <Modal.Header closeButton onClick={onClose}>\r\n            <Modal.Title>\r\n              {this.props.correct ? correctMsg : incorrectMsg}\r\n              <img\r\n                src={\r\n                  this.props.correct\r\n                    ? emotes.emotes[0].images[index[0]].img\r\n                    : emotes.emotes[1].images[index[1]].img\r\n                }\r\n              />\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"text-center\">\r\n              {!correct && selected1.length > 0 && selected2.length > 0 ? (\r\n                <>\r\n                  {incorrectMsg2 +\r\n                    items.items[selected1[0].index].combinations[\r\n                      selected2[0].index\r\n                    ].combo}\r\n                  {\".\"}\r\n                  <br />\r\n                  <img\r\n                    src={\r\n                      items.items[selected1[0].index].combinations[\r\n                        selected2[0].index\r\n                      ].comboImg\r\n                    }\r\n                  />\r\n                  <hr />\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\" text-center\" />\r\n            <div className=\"font-weight-bold text-center\">\r\n              <h5>{items.items[combo.main].combinations[combo.combo].combo}</h5>\r\n            </div>{\" \"}\r\n            <div className=\"text-center\">\r\n              combines from{\" \"}\r\n              <span className=\"font-weight-bold\">\r\n                {items.items[combo.main].name}\r\n              </span>{\" \"}\r\n              and{\" \"}\r\n              <span className=\"font-weight-bold\">\r\n                {items.items[combo.combo].name}\r\n              </span>\r\n              .\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <img src={items.items[combo.main].img} />{\" \"}\r\n              <img src={items.items[combo.combo].img} />\r\n            </div>\r\n            <div className=\"font-weight-light text-center\">\r\n              <span className=\"font-weight-bold\">Stats: </span>\r\n              {items.items[combo.main].combinations[combo.combo].stat}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              className=\"btn btn-primary btn-lg\"\r\n              variant=\"secondary\"\r\n              onClick={onClose}\r\n            >\r\n              OK\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n"]},"metadata":{},"sourceType":"module"}