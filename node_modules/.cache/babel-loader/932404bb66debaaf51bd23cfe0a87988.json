{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shirley\\\\Documents\\\\tft-quiz\\\\tft-quiz\\\\src\\\\components\\\\cheatsheet.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, Table } from \"react-bootstrap\";\n\nclass Cheatsheet extends Component {\n  render() {\n    const _this$props = this.props,\n          show = _this$props.show,\n          onShow = _this$props.onShow,\n          onClose = _this$props.onClose;\n\n    const items = require(\"./items.json\");\n\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: onShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Cheat sheet\"), React.createElement(Modal, {\n      size: \"lg\",\n      show: show,\n      onHide: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Item Combinations Cheatsheet\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" Hover item icon to see item combinations. \"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, items.items.map(main => {\n      return React.createElement(\"tr\", {\n        key: main.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, main.combinations.map(combo => {\n        return React.createElement(\"th\", {\n          key: combo.combo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(OverlayTrigger, {\n          placement: \"right-start\",\n          delay: {\n            show: 250,\n            hide: 400\n          },\n          overlay: renderTooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Hover me to see\")));\n      }));\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default Cheatsheet;","map":{"version":3,"sources":["C:\\Users\\Shirley\\Documents\\tft-quiz\\tft-quiz\\src\\components\\cheatsheet.jsx"],"names":["React","Component","Button","Modal","Table","Cheatsheet","render","props","show","onShow","onClose","items","require","map","main","name","combinations","combo","hide","renderTooltip"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,iBAArC;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,MAAM,GAAG;AAAA,wBAC2B,KAAKC,KADhC;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,MADP,eACOA,MADP;AAAA,UACeC,OADf,eACeA,OADf;;AAEP,UAAMC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,WACE,0CACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEH,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAED,IAAvB;AAA6B,MAAA,MAAM,EAAEE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAA0B,MAAA,OAAO,EAAEA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,EAEE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,CAACA,KAAN,CAAYE,GAAZ,CAAgBC,IAAI,IAAI;AACvB,aACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,YAAL,CAAkBH,GAAlB,CAAsBI,KAAK,IAAI;AAC9B,eACE;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE,oBAAC,cAAD;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,KAAK,EAAE;AAAET,YAAAA,IAAI,EAAE,GAAR;AAAaU,YAAAA,IAAI,EAAE;AAAnB,WAFT;AAGE,UAAA,OAAO,EAAEC,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,CATF,CADF;AAmBD,OApBA,CADH,CADF;AAyBD,KA1BA,CADH,CADF,CAFF,CAJF,EAsCE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAET,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAtCF,CALF,CADF;AAoDD;;AAzDgC;;AA4DnC,eAAeL,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Modal, Table } from \"react-bootstrap\";\r\n\r\nclass Cheatsheet extends Component {\r\n  render() {\r\n    const { show, onShow, onClose } = this.props;\r\n    const items = require(\"./items.json\");\r\n\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={onShow}>\r\n          Cheat sheet\r\n        </Button>\r\n\r\n        <Modal size=\"lg\" show={show} onHide={onClose}>\r\n          <Modal.Header closeButton onClick={onClose}>\r\n            <Modal.Title>Item Combinations Cheatsheet</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p> Hover item icon to see item combinations. </p>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                {items.items.map(main => {\r\n                  return (\r\n                    <tr key={main.name}>\r\n                      {main.combinations.map(combo => {\r\n                        return (\r\n                          <th key={combo.combo}>\r\n                            {/* <a\r\n                              key={combo.combo}\r\n                              data-toggle=\"tooltip\"\r\n                              data-placement=\"top\"\r\n                              title={main.name + \", \" + combo.name}\r\n                            >\r\n                              <img src={combo.comboImg} />\r\n                            </a> */}\r\n                            <OverlayTrigger\r\n                              placement=\"right-start\"\r\n                              delay={{ show: 250, hide: 400 }}\r\n                              overlay={renderTooltip}\r\n                            >\r\n                              <Button variant=\"success\">Hover me to see</Button>\r\n                            </OverlayTrigger>\r\n                          </th>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </thead>\r\n            </Table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cheatsheet;\r\n"]},"metadata":{},"sourceType":"module"}