{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shirley\\\\Documents\\\\tft-quiz\\\\tft-quiz\\\\src\\\\components\\\\highscores.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Table, Form, Row, Col } from \"react-bootstrap\";\n\nclass HighScores extends Component {\n  render() {\n    const _this$props = this.props,\n          highScores = _this$props.highScores,\n          showHighScoresFlag = _this$props.showHighScoresFlag,\n          onShowHighScoreList = _this$props.onShowHighScoreList,\n          onCloseHighScoreList = _this$props.onCloseHighScoreList,\n          handleSearch = _this$props.handleSearch,\n          currentSearch = _this$props.currentSearch,\n          searchedHighScores = _this$props.searchedHighScores;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"info\",\n      onClick: onShowHighScoreList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"High Scores\"), React.createElement(Modal, {\n      show: showHighScoresFlag,\n      onHide: onCloseHighScoreList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      onClick: onCloseHighScoreList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"High Scores\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"input\",\n      placeholder: \"Player name here\",\n      onChange: handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Search\")), currentSearch === \"\" ? [React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"High Scores\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, highScores.map((score, index) => {\n      return React.createElement(\"tr\", {\n        key: score.name + score.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, index < 10 ? [index === 0 ? React.createElement(React.Fragment, null, React.createElement(\"td\", {\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, score.name), React.createElement(\"td\", {\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, score.score)) : React.createElement(React.Fragment, null, React.createElement(\"td\", {\n        className: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        className: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, score.name), React.createElement(\"td\", {\n        className: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, score.score))] : []);\n    })))] : [React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"High Scores\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, searchedHighScores.map(score => {\n      return React.createElement(\"tr\", {\n        key: score.name + score.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, score.rank), React.createElement(\"td\", {\n        className: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, score.name), React.createElement(\"td\", {\n        className: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, score.score));\n    })))]), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: onCloseHighScoreList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default HighScores;","map":{"version":3,"sources":["C:\\Users\\Shirley\\Documents\\tft-quiz\\tft-quiz\\src\\components\\highscores.jsx"],"names":["React","Component","Modal","Button","Table","Form","Row","Col","HighScores","render","props","highScores","showHighScoresFlag","onShowHighScoreList","onCloseHighScoreList","handleSearch","currentSearch","searchedHighScores","map","score","index","name","rank"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Table, Form, Row, Col } from \"react-bootstrap\";\r\n\r\nclass HighScores extends Component {\r\n  render() {\r\n    const {\r\n      highScores,\r\n      showHighScoresFlag,\r\n      onShowHighScoreList,\r\n      onCloseHighScoreList,\r\n      handleSearch,\r\n      currentSearch,\r\n      searchedHighScores\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Button variant=\"info\" onClick={onShowHighScoreList}>\r\n          High Scores\r\n        </Button>\r\n\r\n        <Modal show={showHighScoresFlag} onHide={onCloseHighScoreList}>\r\n          <Modal.Header closeButton onClick={onCloseHighScoreList}>\r\n            <Modal.Title>High Scores</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group as={Row}>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  type=\"input\"\r\n                  placeholder=\"Player name here\"\r\n                  onChange={handleSearch}\r\n                />\r\n              </Col>\r\n              <Button variant=\"primary\">Search</Button>\r\n            </Form.Group>\r\n            {currentSearch === \"\"\r\n              ? [\r\n                  <Table striped bordered hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Rank</th>\r\n                        <th>Name</th>\r\n                        <th>High Scores</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {highScores.map((score, index) => {\r\n                        return (\r\n                          <tr key={score.name + score.score}>\r\n                            {index < 10\r\n                              ? [\r\n                                  index === 0 ? (\r\n                                    <>\r\n                                      <td className=\"font-weight-bold\">\r\n                                        {index + 1}\r\n                                      </td>\r\n                                      <td className=\"font-weight-bold\">\r\n                                        {score.name}\r\n                                      </td>\r\n                                      <td className=\"font-weight-bold\">\r\n                                        {score.score}\r\n                                      </td>\r\n                                    </>\r\n                                  ) : (\r\n                                    <>\r\n                                      <td className=\"font-weight-light\">\r\n                                        {index + 1}\r\n                                      </td>\r\n                                      <td className=\"font-weight-light\">\r\n                                        {score.name}\r\n                                      </td>\r\n                                      <td className=\"font-weight-light\">\r\n                                        {score.score}\r\n                                      </td>\r\n                                    </>\r\n                                  )\r\n                                ]\r\n                              : []}\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                ]\r\n              : [\r\n                  <Table striped bordered hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Rank</th>\r\n                        <th>Name</th>\r\n                        <th>High Scores</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {searchedHighScores.map(score => {\r\n                        return (\r\n                          <tr key={score.name + score.score}>\r\n                            <td className=\"font-weight-light\">{score.rank}</td>\r\n                            <td className=\"font-weight-light\">{score.name}</td>\r\n                            <td className=\"font-weight-light\">{score.score}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                ]}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onCloseHighScoreList}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HighScores;\r\n"]},"metadata":{},"sourceType":"module"}