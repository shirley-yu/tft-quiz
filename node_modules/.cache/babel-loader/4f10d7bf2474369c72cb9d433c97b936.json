{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shirley\\\\Documents\\\\tft-quiz\\\\tft-quiz\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Choices from \"./components/choices\";\nimport NavBar from \"./components/navbar\";\nimport Selected from \"./components/selected\";\nimport Combo from \"./components/combo\";\nimport Popup from \"./components/popup\";\nimport Guide from \"./components/guide\";\nimport Buttons from \"./components/buttons\";\nimport firebase from \"./firebase.js\"; // import console = require(\"console\");\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      combo: {\n        main: 1,\n        combo: 2\n      },\n      showPopup: false,\n      showCheatsheet: false,\n      correct: false,\n      timerMode: false,\n      showTimerScore: false,\n      popupIndex: [0, 0],\n      startingTime: 30,\n      seconds: 0,\n      items: [{\n        index: 0,\n        selected: [false, false]\n      }, {\n        index: 1,\n        selected: [false, false]\n      }, {\n        index: 2,\n        selected: [false, false]\n      }, {\n        index: 3,\n        selected: [false, false]\n      }, {\n        index: 4,\n        selected: [false, false]\n      }, {\n        index: 5,\n        selected: [false, false]\n      }, {\n        index: 6,\n        selected: [false, false]\n      }, {\n        index: 7,\n        selected: [false, false]\n      }],\n      showScores: false,\n      highScores: [{\n        name: \"shirley\",\n        score: 20\n      }],\n      submit: false,\n      currentHighScore: [{\n        name: \"\",\n        score: 0\n      }],\n      currentSearch: \"\",\n      searchedHighScores: []\n    };\n\n    this.handleSelect = itemIndex => {\n      var items = [...this.state.items];\n      var count = 0;\n\n      for (let i = 0, j = items.length; i < j; i += 1) {\n        if (items[i].selected[0] === true) {\n          count += 1;\n        }\n\n        if (items[i].selected[1] === true) {\n          count += 1;\n        }\n      }\n\n      if (count < 2) {\n        if (count === 0) {\n          items[itemIndex].selected[0] = true;\n        } else if (count === 1) {\n          items[itemIndex].selected[1] = true;\n        }\n      }\n\n      this.setState({\n        items\n      });\n    };\n\n    this.handleNext = () => {\n      var itemIndex = Math.floor(Math.random() * 8);\n      var comboIndex = Math.floor(Math.random() * 8);\n      var combo = this.state.combo;\n      combo.main = itemIndex;\n      combo.combo = comboIndex;\n      this.setState({\n        combo\n      }, () => {\n        this.handleReset();\n      });\n    };\n\n    this.handleShow = () => {\n      if (!this.state.timerMode) {\n        const emotes = require(\"./components/emotes.json\");\n\n        var index1 = Math.floor(Math.random() * emotes.emotes[0].images.length);\n        var index2 = Math.floor(Math.random() * emotes.emotes[1].images.length);\n        var popupIndex = [index1, index2];\n        var showPopup = true;\n        this.setState({\n          showPopup,\n          popupIndex\n        });\n      }\n    };\n\n    this.handleClose = () => {\n      var showPopup = false; // this.setState({ showPopup });\n\n      this.setState({\n        showPopup\n      }, () => {\n        this.handleNext();\n      });\n    };\n\n    this.handleReset = () => {\n      var items = this.state.items.map(item => {\n        item.selected[0] = false;\n        item.selected[1] = false;\n        return item;\n      });\n      this.setState({\n        items\n      });\n    };\n\n    this.handleSubmit = () => {\n      var selected1 = this.state.items.filter(item => item.selected[0] === true);\n      var selected2 = this.state.items.filter(item => item.selected[1] === true); // console.log(selected1, selected2);\n\n      var combo = this.state.combo;\n      var score = this.state.score;\n      var correct;\n\n      if (selected1.length === 1 && selected2.length === 1) {\n        var index = [selected1[0].index, selected2[0].index]; // console.log(index);\n\n        if (index[0] === this.state.combo.main && index[1] === this.state.combo.combo) {\n          // console.log(score);\n          correct = true;\n          score += 1; // console.log(score);\n        } else if (index[0] === this.state.combo.combo && index[1] === this.state.combo.main) {\n          // console.log(score);\n          correct = true;\n          score += 1; // console.log(score);\n        } else {\n          if (score > 0) {\n            correct = false;\n            score -= 1;\n          }\n        }\n\n        if (!this.state.timerMode) {\n          this.setState({\n            score,\n            correct\n          }, () => {\n            this.handleShow();\n          });\n        } else {\n          this.setState({\n            score,\n            correct\n          });\n          this.handleNext();\n        }\n      }\n    };\n\n    this.handleShowCheat = () => {\n      var showCheatsheet = true;\n      this.setState({\n        showCheatsheet\n      });\n    };\n\n    this.handleCloseCheat = () => {\n      var showCheatsheet = false;\n      var score = 0;\n      this.setState({\n        showCheatsheet,\n        score\n      }, () => {\n        this.handleNext();\n      });\n    };\n\n    this.handleUnclickSelected1 = itemIndex => {\n      var items = [...this.state.items];\n      items[itemIndex].selected[0] = false;\n      this.setState({\n        items\n      });\n    };\n\n    this.handleUnclickSelected2 = itemIndex => {\n      var items = [...this.state.items];\n      items[itemIndex].selected[1] = false;\n      this.setState({\n        items\n      });\n    };\n\n    this.handleToggleTimer = () => {\n      var timerMode = true;\n      var score = 0;\n      var seconds = this.state.seconds;\n\n      if (timerMode === true) {\n        seconds = this.state.startingTime;\n      }\n\n      this.setState({\n        timerMode,\n        seconds,\n        score\n      }, () => {\n        this.handleCountdown();\n        this.handleNext();\n      });\n    };\n\n    this.handleTimerClose = () => {\n      var timerMode = false;\n      var submit = false;\n      var score = 0;\n      var showTimerScore = false;\n      this.setState({\n        timerMode,\n        score,\n        showTimerScore,\n        submit\n      }, () => {\n        this.handleNext();\n      });\n    };\n\n    this.handleShowScores = () => {\n      var showScores = true;\n      this.setState({\n        showScores\n      });\n    };\n\n    this.handleCloseScores = () => {\n      var showScores = false;\n      var currentSearch = \"\";\n      this.setState({\n        showScores,\n        currentSearch\n      });\n    };\n\n    this.handleSubmitFlag = () => {\n      var submit = true;\n      this.setState({\n        submit\n      });\n    };\n\n    this.handleNameInput = event => {\n      var currName = event.target.value; // console.log(currName);\n\n      var currScore = this.state.score;\n      var currentHighScore = [{\n        name: currName,\n        score: currScore\n      }];\n      this.setState({\n        currentHighScore\n      });\n    };\n\n    this.handleSubmitToDB = () => {\n      const hiScoresRef = firebase.database().ref(\"scores\");\n      console.log(\"hi\");\n      const score = {\n        name: this.state.currentHighScore[0].name,\n        score: this.state.currentHighScore[0].score\n      };\n      hiScoresRef.push(score);\n      this.setState({\n        currentHighScore: [{\n          name: \"\",\n          score: 0\n        }]\n      }, () => {\n        this.handleTimerClose();\n      });\n    };\n\n    this.handleSearch = event => {\n      var currentSearch = event.target.value;\n      var hiScores = this.state.highScores;\n\n      if (currentSearch !== \"\") {\n        var searchedHighScores = [];\n        var currSearchLower = currentSearch.toLowerCase();\n\n        for (let i = 0; i < hiScores.length; i++) {\n          var lowercase = hiScores[i].name;\n          lowercase = lowercase.toLowerCase();\n\n          if (lowercase.includes(currSearchLower)) {\n            searchedHighScores.push({\n              rank: i + 1,\n              name: hiScores[i].name,\n              score: hiScores[i].score\n            });\n          }\n        }\n      }\n\n      this.setState({\n        currentSearch,\n        searchedHighScores\n      });\n    };\n  }\n\n  componentDidMount() {\n    const scoresRef = firebase.database().ref(\"scores\");\n    scoresRef.on(\"value\", snapshot => {\n      let scores = snapshot.val();\n      let newState = [];\n\n      for (let s in scores) {\n        newState.push({\n          id: s,\n          name: scores[s].name,\n          score: scores[s].score\n        });\n      }\n\n      newState.sort(function (a, b) {\n        return b.score - a.score;\n      });\n      this.setState({\n        highScores: newState\n      });\n    }); // const score = {\n    //   name: \"shirley\",\n    //   score: \"30\"\n    // };\n    // scoresRef.push(score);\n    // this.setState({ testing: scoresRef });\n\n    setInterval(() => {\n      this.handleCountdown();\n    }, 1000);\n  }\n\n  handleCountdown() {\n    if (this.state.timerMode) {\n      if (this.state.seconds > 0) {\n        var showTimerScore = this.state.showTimerScore;\n        var timerMode = this.state.timerMode;\n        var seconds = this.state.seconds - 1;\n      } else if (this.state.seconds === 0) {\n        showTimerScore = true;\n        seconds = 0;\n        timerMode = false;\n      }\n\n      this.setState({\n        seconds,\n        timerMode,\n        showTimerScore\n      });\n    }\n  }\n\n  render() {\n    const items = require(\"./components/items.json\");\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      showCheatsheet: this.state.showCheatsheet,\n      onShowCheatsheet: this.handleShowCheat,\n      onCloseCheatsheet: this.handleCloseCheat,\n      score: this.state.score,\n      onToggleTimer: this.handleToggleTimer,\n      seconds: this.state.seconds,\n      timerFlag: this.state.timerMode,\n      onCloseTimer: this.handleTimerClose,\n      showTimerScore: this.state.showTimerScore,\n      highScores: this.state.highScores,\n      showHighScoresFlag: this.state.showScores,\n      onShowHighScoreList: this.handleShowScores,\n      onCloseHighScoreList: this.handleCloseScores,\n      submitFlag: this.state.submit,\n      onFlagSubmit: this.handleSubmitFlag,\n      onInputName: this.handleNameInput,\n      onSubmitToDB: this.handleSubmitToDB,\n      handleSearch: this.handleSearch,\n      currentSearch: this.state.currentSearch,\n      searchedHighScores: this.state.searchedHighScores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(Guide, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Combo, {\n      mainIndex: this.state.combo.main,\n      comboIndex: this.state.combo.combo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, this.state.items.map(item => {\n      return React.createElement(Choices, {\n        key: item.index,\n        index: item.index,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      });\n    }), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, this.state.items.filter(item => item.selected[0] === true).map(item => {\n      return React.createElement(Selected, {\n        deselected: this.handleUnclickSelected1,\n        key: item.index,\n        index: item.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      });\n    }), this.state.items.filter(item => item.selected[1] === true).map(item => {\n      return React.createElement(Selected, {\n        deselected: this.handleUnclickSelected2,\n        key: item.index,\n        index: item.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      });\n    }))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Buttons, {\n      onSubmit: this.handleSubmit,\n      onNext: this.handleNext,\n      onReset: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    })), React.createElement(Popup, {\n      selected: this.state.items,\n      correct: this.state.correct,\n      show: this.state.showPopup,\n      combo: this.state.combo,\n      onShow: this.handleShow,\n      onClose: this.handleClose,\n      index: this.state.popupIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Shirley\\Documents\\tft-quiz\\tft-quiz\\src\\App.js"],"names":["React","Component","Choices","NavBar","Selected","Combo","Popup","Guide","Buttons","firebase","App","state","score","combo","main","showPopup","showCheatsheet","correct","timerMode","showTimerScore","popupIndex","startingTime","seconds","items","index","selected","showScores","highScores","name","submit","currentHighScore","currentSearch","searchedHighScores","handleSelect","itemIndex","count","i","j","length","setState","handleNext","Math","floor","random","comboIndex","handleReset","handleShow","emotes","require","index1","images","index2","handleClose","map","item","handleSubmit","selected1","filter","selected2","handleShowCheat","handleCloseCheat","handleUnclickSelected1","handleUnclickSelected2","handleToggleTimer","handleCountdown","handleTimerClose","handleShowScores","handleCloseScores","handleSubmitFlag","handleNameInput","event","currName","target","value","currScore","handleSubmitToDB","hiScoresRef","database","ref","console","log","push","handleSearch","hiScores","currSearchLower","toLowerCase","lowercase","includes","rank","componentDidMount","scoresRef","on","snapshot","scores","val","newState","s","id","sort","a","b","setInterval","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Choices from \"./components/choices\";\nimport NavBar from \"./components/navbar\";\nimport Selected from \"./components/selected\";\nimport Combo from \"./components/combo\";\nimport Popup from \"./components/popup\";\nimport Guide from \"./components/guide\";\nimport Buttons from \"./components/buttons\";\nimport firebase from \"./firebase.js\";\n// import console = require(\"console\");\n\nclass App extends Component {\n  state = {\n    score: 0,\n    combo: { main: 1, combo: 2 },\n    showPopup: false,\n    showCheatsheet: false,\n    correct: false,\n    timerMode: false,\n    showTimerScore: false,\n    popupIndex: [0, 0],\n    startingTime: 30,\n    seconds: 0,\n    items: [\n      { index: 0, selected: [false, false] },\n      { index: 1, selected: [false, false] },\n      { index: 2, selected: [false, false] },\n      { index: 3, selected: [false, false] },\n      { index: 4, selected: [false, false] },\n      { index: 5, selected: [false, false] },\n      { index: 6, selected: [false, false] },\n      { index: 7, selected: [false, false] }\n    ],\n    showScores: false,\n    highScores: [{ name: \"shirley\", score: 20 }],\n    submit: false,\n    currentHighScore: [{ name: \"\", score: 0 }],\n    currentSearch: \"\",\n    searchedHighScores: []\n  };\n\n  componentDidMount() {\n    const scoresRef = firebase.database().ref(\"scores\");\n    scoresRef.on(\"value\", snapshot => {\n      let scores = snapshot.val();\n      let newState = [];\n      for (let s in scores) {\n        newState.push({\n          id: s,\n          name: scores[s].name,\n          score: scores[s].score\n        });\n      }\n      newState.sort(function(a, b) {\n        return b.score - a.score;\n      });\n      this.setState({\n        highScores: newState\n      });\n    });\n    // const score = {\n    //   name: \"shirley\",\n    //   score: \"30\"\n    // };\n    // scoresRef.push(score);\n    // this.setState({ testing: scoresRef });\n    setInterval(() => {\n      this.handleCountdown();\n    }, 1000);\n  }\n\n  handleSelect = itemIndex => {\n    var items = [...this.state.items];\n    var count = 0;\n    for (let i = 0, j = items.length; i < j; i += 1) {\n      if (items[i].selected[0] === true) {\n        count += 1;\n      }\n      if (items[i].selected[1] === true) {\n        count += 1;\n      }\n    }\n    if (count < 2) {\n      if (count === 0) {\n        items[itemIndex].selected[0] = true;\n      } else if (count === 1) {\n        items[itemIndex].selected[1] = true;\n      }\n    }\n    this.setState({ items });\n  };\n\n  handleNext = () => {\n    var itemIndex = Math.floor(Math.random() * 8);\n    var comboIndex = Math.floor(Math.random() * 8);\n    var combo = this.state.combo;\n    combo.main = itemIndex;\n    combo.combo = comboIndex;\n    this.setState({ combo }, () => {\n      this.handleReset();\n    });\n  };\n\n  handleShow = () => {\n    if (!this.state.timerMode) {\n      const emotes = require(\"./components/emotes.json\");\n\n      var index1 = Math.floor(Math.random() * emotes.emotes[0].images.length);\n      var index2 = Math.floor(Math.random() * emotes.emotes[1].images.length);\n      var popupIndex = [index1, index2];\n      var showPopup = true;\n      this.setState({ showPopup, popupIndex });\n    }\n  };\n\n  handleClose = () => {\n    var showPopup = false;\n    // this.setState({ showPopup });\n    this.setState({ showPopup }, () => {\n      this.handleNext();\n    });\n  };\n\n  handleReset = () => {\n    var items = this.state.items.map(item => {\n      item.selected[0] = false;\n      item.selected[1] = false;\n      return item;\n    });\n    this.setState({ items });\n  };\n\n  handleSubmit = () => {\n    var selected1 = this.state.items.filter(item => item.selected[0] === true);\n    var selected2 = this.state.items.filter(item => item.selected[1] === true);\n    // console.log(selected1, selected2);\n    var combo = this.state.combo;\n    var score = this.state.score;\n    var correct;\n    if (selected1.length === 1 && selected2.length === 1) {\n      var index = [selected1[0].index, selected2[0].index];\n      // console.log(index);\n\n      if (\n        index[0] === this.state.combo.main &&\n        index[1] === this.state.combo.combo\n      ) {\n        // console.log(score);\n        correct = true;\n        score += 1;\n        // console.log(score);\n      } else if (\n        index[0] === this.state.combo.combo &&\n        index[1] === this.state.combo.main\n      ) {\n        // console.log(score);\n        correct = true;\n        score += 1;\n        // console.log(score);\n      } else {\n        if (score > 0) {\n          correct = false;\n          score -= 1;\n        }\n      }\n      if (!this.state.timerMode) {\n        this.setState({ score, correct }, () => {\n          this.handleShow();\n        });\n      } else {\n        this.setState({ score, correct });\n        this.handleNext();\n      }\n    }\n  };\n\n  handleShowCheat = () => {\n    var showCheatsheet = true;\n    this.setState({ showCheatsheet });\n  };\n\n  handleCloseCheat = () => {\n    var showCheatsheet = false;\n    var score = 0;\n    this.setState({ showCheatsheet, score }, () => {\n      this.handleNext();\n    });\n  };\n\n  handleUnclickSelected1 = itemIndex => {\n    var items = [...this.state.items];\n    items[itemIndex].selected[0] = false;\n    this.setState({ items });\n  };\n\n  handleUnclickSelected2 = itemIndex => {\n    var items = [...this.state.items];\n    items[itemIndex].selected[1] = false;\n    this.setState({ items });\n  };\n\n  handleToggleTimer = () => {\n    var timerMode = true;\n    var score = 0;\n    var seconds = this.state.seconds;\n    if (timerMode === true) {\n      seconds = this.state.startingTime;\n    }\n    this.setState({ timerMode, seconds, score }, () => {\n      this.handleCountdown();\n      this.handleNext();\n    });\n  };\n\n  handleCountdown() {\n    if (this.state.timerMode) {\n      if (this.state.seconds > 0) {\n        var showTimerScore = this.state.showTimerScore;\n        var timerMode = this.state.timerMode;\n        var seconds = this.state.seconds - 1;\n      } else if (this.state.seconds === 0) {\n        showTimerScore = true;\n        seconds = 0;\n        timerMode = false;\n      }\n      this.setState({ seconds, timerMode, showTimerScore });\n    }\n  }\n\n  handleTimerClose = () => {\n    var timerMode = false;\n    var submit = false;\n    var score = 0;\n    var showTimerScore = false;\n    this.setState({ timerMode, score, showTimerScore, submit }, () => {\n      this.handleNext();\n    });\n  };\n\n  handleShowScores = () => {\n    var showScores = true;\n    this.setState({ showScores });\n  };\n\n  handleCloseScores = () => {\n    var showScores = false;\n    var currentSearch = \"\";\n    this.setState({ showScores, currentSearch });\n  };\n\n  handleSubmitFlag = () => {\n    var submit = true;\n    this.setState({ submit });\n  };\n\n  handleNameInput = event => {\n    var currName = event.target.value;\n    // console.log(currName);\n    var currScore = this.state.score;\n    var currentHighScore = [{ name: currName, score: currScore }];\n    this.setState({\n      currentHighScore\n    });\n  };\n\n  handleSubmitToDB = () => {\n    const hiScoresRef = firebase.database().ref(\"scores\");\n    console.log(\"hi\");\n    const score = {\n      name: this.state.currentHighScore[0].name,\n      score: this.state.currentHighScore[0].score\n    };\n    hiScoresRef.push(score);\n    this.setState(\n      {\n        currentHighScore: [{ name: \"\", score: 0 }]\n      },\n      () => {\n        this.handleTimerClose();\n      }\n    );\n  };\n\n  handleSearch = event => {\n    var currentSearch = event.target.value;\n    var hiScores = this.state.highScores;\n    if (currentSearch !== \"\") {\n      var searchedHighScores = [];\n      var currSearchLower = currentSearch.toLowerCase();\n      for (let i = 0; i < hiScores.length; i++) {\n        var lowercase = hiScores[i].name;\n        lowercase = lowercase.toLowerCase();\n        if (lowercase.includes(currSearchLower)) {\n          searchedHighScores.push({\n            rank: i + 1,\n            name: hiScores[i].name,\n            score: hiScores[i].score\n          });\n        }\n      }\n    }\n    this.setState({\n      currentSearch,\n      searchedHighScores\n    });\n  };\n\n  render() {\n    const items = require(\"./components/items.json\");\n    return (\n      <React.Fragment>\n        <NavBar\n          showCheatsheet={this.state.showCheatsheet}\n          onShowCheatsheet={this.handleShowCheat}\n          onCloseCheatsheet={this.handleCloseCheat}\n          score={this.state.score}\n          onToggleTimer={this.handleToggleTimer}\n          seconds={this.state.seconds}\n          timerFlag={this.state.timerMode}\n          onCloseTimer={this.handleTimerClose}\n          showTimerScore={this.state.showTimerScore}\n          highScores={this.state.highScores}\n          showHighScoresFlag={this.state.showScores}\n          onShowHighScoreList={this.handleShowScores}\n          onCloseHighScoreList={this.handleCloseScores}\n          submitFlag={this.state.submit}\n          onFlagSubmit={this.handleSubmitFlag}\n          onInputName={this.handleNameInput}\n          onSubmitToDB={this.handleSubmitToDB}\n          handleSearch={this.handleSearch}\n          currentSearch={this.state.currentSearch}\n          searchedHighScores={this.state.searchedHighScores}\n        />\n        <hr />\n        <Guide />\n\n        <div>\n          <Combo\n            mainIndex={this.state.combo.main}\n            comboIndex={this.state.combo.combo}\n          />\n        </div>\n        <div>\n          {this.state.items.map(item => {\n            return (\n              <Choices\n                key={item.index}\n                index={item.index}\n                onSelect={this.handleSelect}\n              />\n            );\n          })}{\" \"}\n          <span>\n            {this.state.items\n              .filter(item => item.selected[0] === true)\n              .map(item => {\n                return (\n                  <Selected\n                    deselected={this.handleUnclickSelected1}\n                    key={item.index}\n                    index={item.index}\n                  />\n                );\n              })}\n            {this.state.items\n              .filter(item => item.selected[1] === true)\n              .map(item => {\n                return (\n                  <Selected\n                    deselected={this.handleUnclickSelected2}\n                    key={item.index}\n                    index={item.index}\n                  />\n                );\n              })}\n          </span>\n        </div>\n        <hr />\n        <div>\n          <Buttons\n            onSubmit={this.handleSubmit}\n            onNext={this.handleNext}\n            onReset={this.handleReset}\n          />\n        </div>\n        <Popup\n          selected={this.state.items}\n          correct={this.state.correct}\n          show={this.state.showPopup}\n          combo={this.state.combo}\n          onShow={this.handleShow}\n          onClose={this.handleClose}\n          index={this.state.popupIndex}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}